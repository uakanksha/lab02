name: Build and Deploy

on:
  workflow_dispatch: {}

env:
  applicationfolder: Spring-boot-hello-world-example  # Check correct folder name
  AWS_REGION: us-east-1
  S3BUCKET: codedeploystack-webappdeploymentbucket-zghew8jxqxqs  

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Verify Repository Structure
        run: ls -R  # Debugging step to check if the folder exists

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Give Execute Permission to Scripts
        run: chmod -R +x .github/scripts/*.sh

      - name: Build and Package Maven
        run: |
          cd $GITHUB_WORKSPACE/${{ env.applicationfolder }}  # Change directory correctly
          ls -R  # Debugging step
          bash $GITHUB_WORKSPACE/.github/scripts/build.sh  # Execute the build script

      - name: Upload Artifact to S3
        run: aws s3 cp $GITHUB_WORKSPACE/${{ env.applicationfolder }}/target/*.war s3://${{ env.S3BUCKET }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy with AWS CodeDeploy
        run: |
          echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
          commit_hash=$(git rev-parse HEAD)
          aws deploy create-deployment \
            --application-name CodeDeployAppNameWithASG \
            --deployment-group-name CodeDeployGroupName \
            --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash \
            --ignore-application-stop-failures
